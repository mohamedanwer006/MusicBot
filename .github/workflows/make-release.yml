name: Make Release
on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version Number'     
        required: true
        type: string
      info:
        description: 'Description of this Release'
        required: true
        type: string

jobs:
  build_jar:
    name: Build Jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Set Version
        uses: datamonsters/replace-action@v2
        with:
          files: 'pom.xml'
          replacements: 'Snapshot=${{ github.event.inputs.version_number }}'
      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify

      - name: Log in to Docker Hub
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository
      
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Rename jar
        run: mv target/*-All.jar JMusicBot-${{ github.event.inputs.version_number }}.jar
        
      - name: Upload jar
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: JMusicBot-${{ github.event.inputs.version_number }}.jar
          if-no-files-found: error
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build_jar
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: jar
          path: .
      - name: Show Artifacts
        run: ls -R
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version_number }}
          name: Version ${{ github.event.inputs.version_number }}
          draft: true
          prerelease: false
          artifacts: "*.jar"
          body: |
            ${{ github.event.inputs.info }}
            
            ---
            ### Setup
            https://jmusicbot.com/setup  
            https://jmusicbot.com/config  
            # Download: [JMusicBot-${{ github.event.inputs.version_number }}.jar](https://github.com/jagrosh/MusicBot/releases/download/${{ github.event.inputs.version_number }}/JMusicBot-${{ github.event.inputs.version_number }}.jar)
